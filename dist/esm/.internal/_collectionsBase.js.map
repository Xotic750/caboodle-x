{"version":3,"sources":["../../../src/.internal/_collectionsBase.js"],"names":["assertIsFunction","assertIsObjectLike","IdGenerator","isArrayLike","isPrimitive","isStringType","isSurrogatePair","_any","_charAt","_defineProperties","_defineProperty","_nth","_getSymbolIterator","_hasOwnProperty","isFunction","_occurs","_push","_splice","parseIterable","kind","context","iterable","value","property","iterator","next","length","TypeError","done","key","occurred","includes","get","index","char1","char2","forEach","callback","thisArg","pointers","order","keyLength","call","_predicate","id","count","has","clear","reset","de1ete","addSet"],"mappings":"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","sourcesContent":["/**\n * @file Utility that needs description.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module _collectionsBase\n */\n\nimport assertIsFunction from '../assertIsFunction';\nimport assertIsObjectLike from '../assertIsObjectLike';\nimport IdGenerator from '../BigCounter';\nimport isArrayLike from '../isArrayLike';\nimport isPrimitive from '../isPrimitive';\nimport isStringType from '../isStringType';\nimport isSurrogatePair from '../isSurrogatePair';\nimport _any from './_any';\nimport _charAt from './_charAt';\nimport _defineProperties from './_defineProperties';\nimport _defineProperty from './_defineProperty';\nimport _nth from './_nth';\nimport _getSymbolIterator from './_getSymbolIterator';\nimport _hasOwnProperty from './_hasOwnProperty';\nimport isFunction from '../isFunction';\nimport _occurs from './_occurs';\nimport _push from './_push';\nimport _splice from './_splice';\n\n/**\n * If an iterable object is passed, all of its elements will be added to the\n * new Map/Set, null is treated as undefined.\n *\n * @private\n * @param {string} kind - Either 'map' or 'set'.\n * @param {Object} context - The Map/Set object.\n * @param {*} iterable - Value to parsed.\n */\nexport function parseIterable(kind, context, iterable) {\n  if (kind === 'map') {\n    _defineProperty(context, '[[value]]', {\n      value: [],\n    });\n  }\n\n  _defineProperties(context, {\n    '[[changed]]': {\n      value: false,\n    },\n    '[[id]]': {\n      value: new IdGenerator(),\n    },\n    '[[kind]]': {\n      value: kind,\n    },\n    '[[key]]': {\n      value: [],\n    },\n    '[[order]]': {\n      value: [],\n    },\n  });\n\n  const property = _getSymbolIterator(iterable);\n  if (iterable && isFunction(iterable[property])) {\n    const iterator = iterable[property]();\n    let next = iterator.next();\n    if (kind === 'map') {\n      if (!isArrayLike(next.value) || next.value.length < 2) {\n        throw new TypeError(\n          `Iterator value ${next.value} is not an entry object`,\n        );\n      }\n    }\n\n    while (!next.done) {\n      const key = kind === 'map' ? next.value[0] : next.value;\n      const occurred = _occurs(assertIsObjectLike(context)['[[key]]']);\n\n      if (!occurred.includes) {\n        if (kind === 'map') {\n          _push(context['[[value]]'], next.value[1]);\n        }\n\n        _push(context['[[key]]'], key);\n        _push(context['[[order]]'], context['[[id]]'].get());\n        context['[[id]]'].next();\n      } else if (kind === 'map') {\n        // eslint-disable-next-line no-param-reassign\n        context['[[value]]'][occurred.index] = _nth(next.value, 1);\n      }\n\n      next = iterator.next();\n    }\n  } else if (isStringType(iterable)) {\n    if (kind === 'map') {\n      throw new TypeError(\n        `Iterator value ${_charAt(iterable, 0)} is not an entry object`,\n      );\n    }\n\n    let next = 0;\n    while (next < iterable.length) {\n      const char1 = _charAt(iterable, next);\n      const char2 = _charAt(iterable, next + 1);\n      let key;\n      if (isSurrogatePair(char1, char2)) {\n        key = char1 + char2;\n        next += 1;\n      } else {\n        key = char1;\n      }\n\n      if (!_occurs(assertIsObjectLike(context)['[[key]]'], key).includes) {\n        _push(context['[[key]]'], key);\n        _push(context['[[order]]'], context['[[id]]'].get());\n        context['[[id]]'].next();\n      }\n\n      next += 1;\n    }\n  } else if (isArrayLike(iterable)) {\n    let next = 0;\n    while (next < iterable.length) {\n      if (kind === 'map' && isPrimitive(iterable[next])) {\n        throw new TypeError(\n          `Iterator value ${next.value} is not an entry object`,\n        );\n      }\n\n      const key = kind === 'map' ? iterable[next][0] : iterable[next];\n      const occurred = _occurs(assertIsObjectLike(context)['[[key]]'], key);\n\n      if (!occurred.includes) {\n        if (kind === 'map') {\n          _push(context['[[value]]'], iterable[next][1]);\n        }\n\n        _push(context['[[key]]'], key);\n        _push(context['[[order]]'], context['[[id]]'].get());\n        context['[[id]]'].next();\n      } else if (kind === 'map') {\n        // eslint-disable-next-line no-param-reassign\n        context['[[value]]'][occurred.index] = _nth(iterable[next], 1);\n      }\n\n      next += 1;\n    }\n  }\n}\n\n/**\n * The base forEach method executes a provided function once per each value\n * in the Map/Set object, in insertion order.\n *\n * @private\n * @param {string} kind - Either 'map' or 'set'.\n * @param {Object} context - The Map/Set object.\n * @param {Function} callback - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @returns {Object} The Map/Set object.\n */\nexport function forEach(kind, context, callback, thisArg) {\n  assertIsObjectLike(context);\n  assertIsFunction(callback);\n  const pointers = {\n    index: 0,\n    order: context['[[order]]'][0],\n  };\n\n  // eslint-disable-next-line no-param-reassign\n  context['[[change]]'] = false;\n\n  let keyLength = context['[[key]]'].length;\n  while (pointers.index < keyLength) {\n    if (_hasOwnProperty(context['[[key]]'], pointers.index)) {\n      const key = context['[[key]]'][pointers.index];\n      const value = kind === 'map' ? context['[[value]]'][pointers.index] : key;\n      callback.call(thisArg, value, key, context);\n    }\n\n    if (context['[[change]]']) {\n      keyLength = context['[[key]]'].length;\n      _any(context['[[order]]'], function _predicate(id, count) {\n        pointers.index = count;\n        return id > pointers.order;\n      });\n\n      // eslint-disable-next-line no-param-reassign\n      context['[[change]]'] = false;\n    } else {\n      pointers.index += 1;\n    }\n\n    pointers.order = context['[[order]]'][pointers.index];\n  }\n\n  return context;\n}\n\n/**\n * The base has method returns a boolean indicating whether an element with\n * the specified key/value exists in a Map/Set object or not.\n *\n * @private\n * @param {*} key - The key/value to test for presence in the Map/Set object.\n * @returns {boolean} Returns true if an element with the specified key/value\n *  exists in the Map/Set object; otherwise false.\n */\nexport function has(key) {\n  return _occurs(assertIsObjectLike(this)['[[key]]'], key).includes;\n}\n\n/**\n * The base clear method removes all elements from a Map/Set object.\n *\n * @private\n * @param {string} kind - Either 'map' or 'set'.\n * @param {Object} context - The Map/Set object.\n * @returns {Object} The Map/Set object.\n */\nexport function clear(kind, context) {\n  assertIsObjectLike(context);\n  context['[[id]]'].reset();\n  // eslint-disable-next-line no-param-reassign\n  context['[[change]]'] = true;\n  // eslint-disable-next-line no-param-reassign\n  context['[[order]]'].length = 0;\n  // eslint-disable-next-line no-param-reassign\n  context['[[key]]'].length = 0;\n  if (kind === 'map') {\n    // eslint-disable-next-line no-param-reassign\n    context['[[value]]'].length = 0;\n  }\n\n  return context;\n}\n\n/**\n * The base delete method removes the specified element from a Map/Set object.\n *\n * @private\n * @param {string} kind - Either 'map' or 'set'.\n * @param {Object} context - The Map/Set object.\n * @param {*} key - The key/value of the element to remove from Map/Set object.\n * @returns {Object} The Map/Set object.\n */\nexport function de1ete(kind, context, key) {\n  const occurred = _occurs(assertIsObjectLike(context)['[[key]]'], key);\n\n  if (occurred.includes) {\n    if (kind === 'map') {\n      _splice(context['[[value]]'], occurred.index, 1);\n    }\n\n    _splice(context['[[key]]'], occurred.index, 1);\n    _splice(context['[[order]]'], occurred.index, 1);\n    // eslint-disable-next-line no-param-reassign\n    context['[[change]]'] = true;\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * The base set and add method.\n *\n * @private\n * @param {string} kind - Either 'map' or 'set'.\n * @param {Object} context - The Map/Set object.\n * @param {*} key - The key or value of the element to add/set on the object.\n * @param {*} value - The value of the element to add to the Map object.\n * @returns {Object} The Map/Set object.\n */\nexport function addSet(kind, context, key, value) {\n  const occurred = _occurs(assertIsObjectLike(context)['[[key]]'], key);\n\n  if (occurred.includes) {\n    if (kind === 'map') {\n      // eslint-disable-next-line no-param-reassign\n      context['[[value]]'][occurred.index] = value;\n    }\n  } else {\n    if (kind === 'map') {\n      _push(context['[[value]]'], value);\n    }\n\n    _push(context['[[key]]'], key);\n    _push(context['[[order]]'], context['[[id]]'].get());\n    context['[[id]]'].next();\n    // eslint-disable-next-line no-param-reassign\n    context['[[change]]'] = true;\n  }\n\n  return context;\n}\n"],"file":"_collectionsBase.js"}