{"version":3,"sources":["../../../src/.internal/_isFunction.js"],"names":["_functionToString","_test","attempt","_Boolean","toStringTag","isToStringTagSupported","isPrimitive","normalizeSpace","replaceComments","isClassSupported","FUNC_TAG","GEN_TAG","ASYNC_TAG","ctrRx","testClassString","_testClassString","value","isES6ClassFn","_isES6ClassFn","result","threw","tryFuncToString","_tryFuncToString","allowClass","isFunction","strTag"],"mappings":"AAAA;;;;;AAMA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,IAAMC,QAAQ,GAAG,mBAAjB;AACA,IAAMC,OAAO,GAAG,4BAAhB;AACA,IAAMC,SAAS,GAAG,wBAAlB;AACA,IAAMC,KAAK,GAAG,SAAd;;AAEA,IAAMC,eAAe,GAAG,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACvD,SAAOf,KAAK,CAACY,KAAD,EAAQN,cAAc,CAACC,eAAe,CAACR,iBAAiB,CAACgB,KAAD,CAAlB,EAA2B,GAA3B,CAAhB,CAAtB,CAAZ;AACD,CAFD;;AAIA,IAAMC,YAAY,GAAG,SAASC,aAAT,CAAuBF,KAAvB,EAA8B;AACjD,MAAMG,MAAM,GAAGjB,OAAO,CAACY,eAAD,EAAkBE,KAAlB,CAAtB;AAEA,SAAO,CAACG,MAAM,CAACC,KAAR,IAAiBD,MAAM,CAACH,KAA/B;AACD,CAJD;AAMA;;;;;;;;;;;AASA,IAAMK,eAAe,GAAG,SAASC,gBAAT,CAA0BN,KAA1B,EAAiCO,UAAjC,EAA6C;AACnE,MAAId,gBAAgB,IAAI,CAACc,UAArB,IAAmCN,YAAY,CAACD,KAAD,CAAnD,EAA4D;AAC1D,WAAO,KAAP;AACD;;AAED,SAAO,CAACd,OAAO,CAACF,iBAAD,EAAoBgB,KAApB,CAAP,CAAkCI,KAA1C;AACD,CAND;AAQA;;;;;;;;;;AAQA,eAAe,SAASI,UAAT,CAAoBR,KAApB,EAA0C;AACvD,MAAIV,WAAW,CAACU,KAAD,CAAf,EAAwB;AACtB,WAAO,KAAP;AACD;;AAED,MAAIX,sBAAJ,EAA4B;AAC1B,WAAOgB,eAAe,CAACL,KAAD,EAAQb,QAAQ,kDAAhB,CAAtB;AACD;;AAED,MAAIM,gBAAgB,IAAI,mDAApB,IAAsCQ,YAAY,CAACD,KAAD,CAAtD,EAA+D;AAC7D,WAAO,KAAP;AACD;;AAED,MAAMS,MAAM,GAAGrB,WAAW,CAACY,KAAD,CAA1B;AAEA,SAAOS,MAAM,KAAKf,QAAX,IAAuBe,MAAM,KAAKd,OAAlC,IAA6Cc,MAAM,KAAKb,SAA/D;AACD","sourcesContent":["/**\n * @file Determine whether a given value is a function object.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module _isFunction\n */\n\nimport _functionToString from './_functionToString';\nimport _test from './_test';\nimport attempt from '../attempt';\nimport _Boolean from './_Boolean';\nimport toStringTag from '../toStringTag';\nimport isToStringTagSupported from '../isToStringTagSupported';\nimport isPrimitive from '../isPrimitive';\nimport normalizeSpace from '../normalizeSpace';\nimport replaceComments from '../replaceComments';\nimport isClassSupported from '../isClassSupported';\n\nconst FUNC_TAG = '[object Function]';\nconst GEN_TAG = '[object GeneratorFunction]';\nconst ASYNC_TAG = '[object AsyncFunction]';\nconst ctrRx = /^class /;\n\nconst testClassString = function _testClassString(value) {\n  return _test(ctrRx, normalizeSpace(replaceComments(_functionToString(value), ' ')));\n};\n\nconst isES6ClassFn = function _isES6ClassFn(value) {\n  const result = attempt(testClassString, value);\n\n  return !result.threw && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to _sift ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function _tryFuncToString(value, allowClass) {\n  if (isClassSupported && !allowClass && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return !attempt(_functionToString, value).threw;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to _sift ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nexport default function isFunction(value, ...allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (isToStringTagSupported) {\n    return tryFuncToString(value, _Boolean(allowClass[0]));\n  }\n\n  if (isClassSupported && !allowClass[0] && isES6ClassFn(value)) {\n    return false;\n  }\n\n  const strTag = toStringTag(value);\n\n  return strTag === FUNC_TAG || strTag === GEN_TAG || strTag === ASYNC_TAG;\n}\n"],"file":"_isFunction.js"}