{"version":3,"sources":["../../../src/.internal/_parseInt.js"],"names":["toStr","_trimLeft","_Number","_charAt","_test","_NaN","parse","parseInt","hexPattern","_parseInt","string","radix","str"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,KAAK,GAAGC,QAAd;AACA,IAAMC,UAAU,GAAG,WAAnB;AAEA;;;;;;;;;;;;;;;;;;AAiBA,eAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AAC/C,MAAMC,GAAG,GAAGX,SAAS,CAACD,KAAK,CAACU,MAAD,CAAN,CAArB;;AAEA,MAAIP,OAAO,CAACS,GAAD,EAAM,CAAN,CAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAOP,IAAP;AACD;;AAED,SAAOC,KAAK,CAACM,GAAD,EAAMV,OAAO,CAACS,KAAD,CAAP,KAAmBP,KAAK,CAACI,UAAD,EAAaI,GAAb,CAAL,GAAyB,EAAzB,GAA8B,EAAjD,CAAN,CAAZ;AACD","sourcesContent":["/**\n * @file Parses a string argument and returns an integer of the specified radix.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module _parseInt\n */\n\nimport toStr from '../toString';\nimport _trimLeft from './_trimLeft';\nimport _Number from './_Number';\nimport _charAt from './_charAt';\nimport _test from './_test';\nimport _NaN from './_NaN';\n\nconst parse = parseInt;\nconst hexPattern = /^[-+]?0x/i;\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems).\n *\n * @param {string} string - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} radix - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nexport default function _parseInt(string, radix) {\n  const str = _trimLeft(toStr(string));\n\n  if (_charAt(str, 0) === '\\u180E') {\n    return _NaN;\n  }\n\n  return parse(str, _Number(radix) || (_test(hexPattern, str) ? 16 : 10));\n}\n"],"file":"_parseInt.js"}