{"version":3,"sources":["../../../src/.internal/_sign.js"],"names":["_toNumber","_isNaN","_sign","x","n"],"mappings":"AAAA;;;;;AAMA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;;;AASA,eAAe,SAASC,KAAT,CAAeC,CAAf,EAAkB;AAC/B,MAAMC,CAAC,GAAGJ,SAAS,CAACG,CAAD,CAAnB;;AAEA,MAAIC,CAAC,KAAK,CAAN,IAAWH,MAAM,CAACG,CAAD,CAArB,EAA0B;AACxB,WAAOA,CAAP;AACD;;AAED,SAAOA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAApB;AACD","sourcesContent":["/**\n * @file Shim for Math.sign.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module sign\n */\n\nimport _toNumber from './_toNumber';\nimport _isNaN from './_isNaN';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero.\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nexport default function _sign(x) {\n  const n = _toNumber(x);\n\n  if (n === 0 || _isNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n}\n"],"file":"_sign.js"}