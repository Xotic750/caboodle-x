{"version":3,"sources":["../../../src/.internal/_toNumber.js"],"names":["_Number","toPrimitive","_trim","_stringSlice","_test","isBinary","isOctal","isStringType","isSymbolType","_parseInt","_NaN","nonWSregex","RegExp","hasNonWS","_hasNonWS","value","invalidHexLiteral","isInvalidHexLiteral","_isInvalidHexLiteral","dropPrefix","_dropPrefix","_toNumber","argument","Number","TypeError","trimmed"],"mappings":"AAAA;;;;;AAMA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAW,0BAAX,EAAyC,GAAzC,CAAnB;;AACA,IAAMC,QAAQ,GAAG,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACzC,SAAOX,KAAK,CAACO,UAAD,EAAaI,KAAb,CAAZ;AACD,CAFD;;AAIA,IAAMC,iBAAiB,GAAG,oBAA1B;;AACA,IAAMC,mBAAmB,GAAG,SAASC,oBAAT,CAA8BH,KAA9B,EAAqC;AAC/D,SAAOX,KAAK,CAACY,iBAAD,EAAoBD,KAApB,CAAZ;AACD,CAFD;;AAIA,IAAMI,UAAU,GAAG,SAASC,WAAT,CAAqBL,KAArB,EAA4B;AAC7C,SAAOZ,YAAY,CAACY,KAAD,EAAQ,CAAR,CAAnB;AACD,CAFD;;AAIA,eAAe,SAASM,SAAT,CAAmBC,QAAnB,EAA6B;AAC1C,MAAMP,KAAK,GAAGd,WAAW,CAACqB,QAAD,EAAWC,MAAX,CAAzB;;AAEA,MAAIf,YAAY,CAACO,KAAD,CAAhB,EAAyB;AACvB,UAAM,IAAIS,SAAJ,CAAc,2CAAd,CAAN;AACD;;AAED,MAAIjB,YAAY,CAACQ,KAAD,CAAhB,EAAyB;AACvB,QAAIV,QAAQ,CAACU,KAAD,CAAZ,EAAqB;AACnB,aAAOM,SAAS,CAACZ,SAAS,CAACU,UAAU,CAACJ,KAAD,CAAX,EAAoB,CAApB,CAAV,CAAhB;AACD;;AAED,QAAIT,OAAO,CAACS,KAAD,CAAX,EAAoB;AAClB,aAAOM,SAAS,CAACZ,SAAS,CAACU,UAAU,CAACJ,KAAD,CAAX,EAAoB,CAApB,CAAV,CAAhB;AACD;;AAED,QAAIF,QAAQ,CAACE,KAAD,CAAR,IAAmBE,mBAAmB,CAACF,KAAD,CAA1C,EAAmD;AACjD,aAAOL,IAAP;AACD;;AAED,QAAMe,OAAO,GAAGvB,KAAK,CAACa,KAAD,CAArB;;AAEA,QAAIU,OAAO,KAAKV,KAAhB,EAAuB;AACrB,aAAOM,SAAS,CAACI,OAAD,CAAhB;AACD;AACF;;AAED,SAAOzB,OAAO,CAACe,KAAD,CAAd;AACD","sourcesContent":["/**\n * @file Utility that needs description.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module _toNumber\n */\n\nimport _Number from './_Number';\nimport toPrimitive from '../toPrimitive';\nimport _trim from './_trim';\nimport _stringSlice from './_stringSlice';\nimport _test from './_test';\nimport isBinary from '../isBinary';\nimport isOctal from '../isOctal';\nimport isStringType from '../isStringType';\nimport isSymbolType from '../isSymbolType';\nimport _parseInt from './_parseInt';\nimport _NaN from './_NaN';\n\nconst nonWSregex = new RegExp('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS = function _hasNonWS(value) {\n  return _test(nonWSregex, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function _isInvalidHexLiteral(value) {\n  return _test(invalidHexLiteral, value);\n};\n\nconst dropPrefix = function _dropPrefix(value) {\n  return _stringSlice(value, 2);\n};\n\nexport default function _toNumber(argument) {\n  const value = toPrimitive(argument, Number);\n\n  if (isSymbolType(value)) {\n    throw new TypeError('Cannot convert a Symbol value to a number');\n  }\n\n  if (isStringType(value)) {\n    if (isBinary(value)) {\n      return _toNumber(_parseInt(dropPrefix(value), 2));\n    }\n\n    if (isOctal(value)) {\n      return _toNumber(_parseInt(dropPrefix(value), 8));\n    }\n\n    if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n      return _NaN;\n    }\n\n    const trimmed = _trim(value);\n\n    if (trimmed !== value) {\n      return _toNumber(trimmed);\n    }\n  }\n\n  return _Number(value);\n}\n"],"file":"_toNumber.js"}