{"version":3,"sources":["../../src/attempt.js"],"names":["_apply","attempt","fn","rest","threw","value","e"],"mappings":"AAAA;;;;;AAMA,OAAOA,MAAP,MAAmB,oBAAnB;AAEA;;;;;;;;;;AASA,eAAe,SAASC,OAAT,CAAiBC,EAAjB,EAA8B;AAC3C,MAAI;AAAA,sCADiCC,IACjC;AADiCA,MAAAA,IACjC;AAAA;;AACF,WAAO;AACLC,MAAAA,KAAK,EAAE,KADF;;AAEL;AACAC,MAAAA,KAAK,EAAEL,MAAM,CAACE,EAAD,EAAK,IAAL,EAAWC,IAAX;AAHR,KAAP;AAKD,GAND,CAME,OAAOG,CAAP,EAAU;AACV,WAAO;AACLF,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,KAAK,EAAEC;AAFF,KAAP;AAID;AACF","sourcesContent":["/**\n * @file Invokes function, returning an object of the results.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module attempt\n */\n\nimport _apply from './.internal/_apply';\n\n/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} fn - The function to attempt.\n * @param {...*} [rest] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nexport default function attempt(fn, ...rest) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this */\n      value: _apply(fn, this, rest),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n}\n"],"file":"attempt.js"}