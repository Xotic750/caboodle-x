{"version":3,"sources":["../../src/callFunctionOrIdentity.js"],"names":["_apply","assertIsObject","_isFunction","_slice","isNil","requireIsObject","_requireIsObject","value","getArgsArray","_getArgsArray","callFunctionOrIdentity","fnOrValue","argsArray"],"mappings":";;;;;;;;AAAA;;;;;AAMA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,eAAe,GAAG,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACvD,SAAON,cAAc,CAACM,KAAD,EAAQ,8CAAR,CAArB;AACD,CAFD;;AAIA,IAAMC,YAAY,GAAG,SAASC,aAAT,CAAuBF,KAAvB,EAA8B;AACjD,SAAOH,KAAK,CAACG,KAAD,CAAL,GAAe,EAAf,GAAoBJ,MAAM,CAACE,eAAe,CAACE,KAAD,CAAhB,CAAjC;AACD,CAFD;AAIA;;;;;;;;;;;AASA,eAAe,SAASG,sBAAT,CAAgCC,SAAhC,EAAoD;AACjE,MAAIT,WAAW,CAACS,SAAD,CAAf,EAA4B;AAC1B,QAAMC,SAAS,GAAGJ,YAAY,kDAA9B;AAEA,WAAO,qDAAc,CAAd,GAAkBR,MAAM,CAACW,SAAD,oDAAqBC,SAArB,CAAxB,GAA0DD,SAAS,MAAT,4BAAaC,SAAb,EAAjE;AACD;;AAED,SAAOD,SAAP;AACD","sourcesContent":["/**\n * @file Utility to invoke a function and return the result or return the identity argument unchanged.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module callFunctionOrIdentity\n */\n\nimport _apply from './.internal/_apply';\nimport assertIsObject from './assertIsObjectLike';\nimport _isFunction from './.internal/_isFunction';\nimport _slice from './.internal/_slice';\nimport isNil from './isNil';\n\nconst requireIsObject = function _requireIsObject(value) {\n  return assertIsObject(value, 'CreateListFromArrayLike called on non-object');\n};\n\nconst getArgsArray = function _getArgsArray(value) {\n  return isNil(value) ? [] : _slice(requireIsObject(value));\n};\n\n/**\n * Invoke a function and return the result or return the identity argument unchanged.\n *\n * @param {Function|*} fnOrValue - The function to invoke or any other value.\n * @param {Array} rest - The remaining arguments.\n * @param {Array} [rest.argsArray=[]] - The argument(s) to use when invoking a given function.\n * @param {*} [rest.thisArg=undefined] - The context to use when invoking a given function.\n * @returns {*} The result of the invoked function or the identity argument unchanged.\n */\nexport default function callFunctionOrIdentity(fnOrValue, ...rest) {\n  if (_isFunction(fnOrValue)) {\n    const argsArray = getArgsArray(rest[0]);\n\n    return rest.length > 1 ? _apply(fnOrValue, rest[1], argsArray) : fnOrValue(...argsArray);\n  }\n\n  return fnOrValue;\n}\n"],"file":"callFunctionOrIdentity.js"}