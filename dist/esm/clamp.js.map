{"version":3,"sources":["../../src/clamp.js"],"names":["_clamp","_toNumber","clamp","value","number","restLength","min","max","RangeError"],"mappings":"AAAA;;;;;AAMA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA;;;;;;;;;;;AAUA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA+B;AAC5C,MAAMC,MAAM,GAAGH,SAAS,CAACE,KAAD,CAAxB;;AACA,MAAME,UAAU,mDAAhB;;AAEA,MAAIA,UAAU,GAAG,CAAjB,EAAoB;AAClB,WAAOD,MAAP;AACD;;AAED,MAAIE,GAAG,GAAGL,SAAS,kDAAnB;;AACA,MAAIM,GAAG,GAAGN,SAAS,kDAAnB;;AAEA,MAAII,UAAU,GAAG,CAAjB,EAAoB;AAClBE,IAAAA,GAAG,GAAGD,GAAN;AACAA,IAAAA,GAAG,GAAG,CAAN;AACD;;AAED,MAAIA,GAAG,GAAGC,GAAV,EAAe;AACb,UAAM,IAAIC,UAAJ,CAAe,eAAf,CAAN;AACD;;AAED,SAAOR,MAAM,CAACI,MAAD,EAASE,GAAT,EAAcC,GAAd,CAAb;AACD","sourcesContent":["/**\n * @file Utility that clamps a number to min and max limits inclusive.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module clamp\n */\n\nimport _clamp from './.internal/_clamp';\nimport _toNumber from './.internal/_toNumber';\n\n/**\n * This method clamps a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {Array} rest - The remaining arguments array.\n * @param {number} [rest.min=0] - The minimum number.\n * @param {number} rest.max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\nexport default function clamp(value, ...rest) {\n  const number = _toNumber(value);\n  const restLength = rest.length;\n\n  if (restLength < 1) {\n    return number;\n  }\n\n  let min = _toNumber(rest[0]);\n  let max = _toNumber(rest[1]);\n\n  if (restLength < 2) {\n    max = min;\n    min = 0;\n  }\n\n  if (min > max) {\n    throw new RangeError('\"min\" > \"max\"');\n  }\n\n  return _clamp(number, min, max);\n}\n"],"file":"clamp.js"}