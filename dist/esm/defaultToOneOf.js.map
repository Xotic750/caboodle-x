{"version":3,"sources":["../../src/defaultToOneOf.js"],"names":["_includes","_last","requireObjectCoercible","defaultToOneOf","comparates","comparate","fallback"],"mappings":"AAAA;;;;;AAMA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA;;;;;;;;;;;AAUA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAoCC,SAApC,EAA+D;AAC5EH,EAAAA,sBAAsB,CAACE,UAAD,CAAtB;AAEA,MAAME,QAAQ,GAAG,wGAAsCL,KAAK,CAACG,UAAD,CAA5D;AAEA,SAAOJ,SAAS,CAACI,UAAD,EAAaC,SAAb,CAAT,GAAmCA,SAAnC,GAA+CC,QAAtD;AACD","sourcesContent":["/**\n * @file Utility to set a default value from an array.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module defaultToOneOf\n */\n\nimport _includes from './.internal/_includes';\nimport _last from './.internal/_last';\nimport requireObjectCoercible from './requireObjectCoercible';\n\n/**\n * Tests if a comparate exists in a list of comparates an then returns the comparate if there\n * is a match; otherwise returns the last comparates value or fallback value if supplied.\n *\n * @param {Array} [comparates=[]] - An array of values.\n * @param {*} comparate - The value to compare against the supplied list of comparates.\n * @param {Array} fallbackArg - The rest of the arguments array.\n * @param {*} [fallbackArg.fallback=comparates[last]] - The returned value if no match exists.\n * @returns {*} - The comparate upon a match; otherwise the fallback value.\n */\nexport default function defaultToOneOf(comparates, comparate, ...fallbackArg) {\n  requireObjectCoercible(comparates);\n\n  const fallback = fallbackArg.length ? fallbackArg[0] : _last(comparates);\n\n  return _includes(comparates, comparate) ? comparate : fallback;\n}\n"],"file":"defaultToOneOf.js"}