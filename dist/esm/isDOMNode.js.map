{"version":3,"sources":["../../src/isDOMNode.js"],"names":["_methodize","isBooleanType","isNumberType","_Boolean","doc","document","documentInheritsNode","element","hasChildNodes","createElement","ignore","tryAppendChild","cloneNode","appendChild","_tryAppendChild","value","isDOMNode","nodeType"],"mappings":"AAAA;;;;;AAMA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA;;AACA,IAAMC,GAAG,GAAG,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAA/C;AACA,IAAIC,oBAAoB,GAAG,KAA3B;AACA,IAAIC,OAAJ;AACA,IAAIC,aAAJ;AAEA;;AACA,IAAIJ,GAAJ,EAAS;AACP,MAAI;AACFG,IAAAA,OAAO,GAAGH,GAAG,CAACK,aAAJ,CAAkB,KAAlB,CAAV;AACAD,IAAAA,aAAa,GAAGR,UAAU,CAACI,GAAG,CAACI,aAAL,CAA1B;AACAF,IAAAA,oBAAoB,GAAGL,aAAa,CAACO,aAAa,CAACD,OAAD,CAAd,CAApC;AACD,GAJD,CAIE,OAAOG,MAAP,EAAe;AACfF,IAAAA,aAAa,GAAG,IAAhB;AACAF,IAAAA,oBAAoB,GAAG,KAAvB;AACD;AACF;;AAED,IAAIK,cAAJ;AAEA;;AACA,IAAIJ,OAAO,IAAI,CAACD,oBAAhB,EAAsC;AACpCE,EAAAA,aAAa,GAAGR,UAAU,CAACO,OAAO,CAACC,aAAT,CAA1B;;AACA,MAAMI,SAAS,GAAGZ,UAAU,CAACO,OAAO,CAACK,SAAT,CAA5B;;AACA,MAAMC,WAAW,GAAGb,UAAU,CAACO,OAAO,CAACM,WAAT,CAA9B;;AACAF,EAAAA,cAAc,GAAG,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC/C,WAAOF,WAAW,CAACD,SAAS,CAACL,OAAD,EAAU,KAAV,CAAV,EAA4BQ,KAA5B,CAAlB;AACD,GAFD;AAGD;AAED;;;;;;;;AAMA,eAAe,SAASC,SAAT,CAAmBD,KAAnB,EAA0B;AACvC,MAAIP,aAAa,IAAIO,KAAjB,IAA0Bb,YAAY,CAACa,KAAK,CAACE,QAAP,CAA1C,EAA4D;AAC1D,QAAIF,KAAK,KAAKX,GAAd,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI;AACF,aAAOH,aAAa,CAACO,aAAa,CAACO,KAAD,CAAd,CAApB;AACD,KAFD,CAEE,OAAOL,MAAP,EAAe,CAEhB;AADC;;AAGF;;;AACA,QAAI,CAACJ,oBAAL,EAA2B;AACzB,UAAI;AACF,eAAOH,QAAQ,CAACQ,cAAc,CAACI,KAAD,CAAf,CAAf;AACD,OAFD,CAEE,OAAOL,MAAP,EAAe;AACf;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["/**\n * @file Tests if a value is a DOM Node.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module isDOMNode\n */\n\nimport _methodize from './.internal/_methodize';\nimport isBooleanType from './isBooleanType';\nimport isNumberType from './isNumberType';\nimport _Boolean from './.internal/_Boolean';\n\n/* istanbul ignore next */\nconst doc = typeof document !== 'undefined' && document;\nlet documentInheritsNode = false;\nlet element;\nlet hasChildNodes;\n\n/* istanbul ignore next */\nif (doc) {\n  try {\n    element = doc.createElement('div');\n    hasChildNodes = _methodize(doc.hasChildNodes);\n    documentInheritsNode = isBooleanType(hasChildNodes(element));\n  } catch (ignore) {\n    hasChildNodes = null;\n    documentInheritsNode = false;\n  }\n}\n\nlet tryAppendChild;\n\n/* istanbul ignore if */\nif (element && !documentInheritsNode) {\n  hasChildNodes = _methodize(element.hasChildNodes);\n  const cloneNode = _methodize(element.cloneNode);\n  const appendChild = _methodize(element.appendChild);\n  tryAppendChild = function _tryAppendChild(value) {\n    return appendChild(cloneNode(element, false), value);\n  };\n}\n\n/**\n * This method tests if `value` is a DOM Node.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} True if a DOM Node, otherwise false.\n */\nexport default function isDOMNode(value) {\n  if (hasChildNodes && value && isNumberType(value.nodeType)) {\n    if (value === doc) {\n      return true;\n    }\n\n    try {\n      return isBooleanType(hasChildNodes(value));\n    } catch (ignore) {\n      /* ignore */\n    }\n\n    /* istanbul ignore if */\n    if (!documentInheritsNode) {\n      try {\n        return _Boolean(tryAppendChild(value));\n      } catch (ignore) {\n        /* ignore */\n      }\n    }\n  }\n\n  return false;\n}\n"],"file":"isDOMNode.js"}