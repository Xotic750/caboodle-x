{"version":3,"sources":["../../src/isError.js"],"names":["_getPrototypeOf","toStringTag","isObjectLike","testIsError","_testIsError","value","Error","prototype","errorProto","testStringTag","isError","object","maxLoop"],"mappings":"AAAA;;;;;AAMA,OAAOA,eAAP,MAA4B,6BAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAIC,WAAW,GAAG,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC7C,SAAOJ,WAAW,CAACI,KAAD,CAAX,KAAuB,gBAA9B;AACD,CAFD;AAIA;;;AACA,IAAI,CAACF,WAAW,CAACG,KAAK,CAACC,SAAP,CAAhB,EAAmC;AACjC,MAAMC,UAAU,GAAGF,KAAK,CAACC,SAAzB;AACA,MAAME,aAAa,GAAGN,WAAtB;;AACAA,EAAAA,WAAW,GAAG,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzC,WAAOA,KAAK,KAAKG,UAAV,IAAwBC,aAAa,CAACJ,KAAD,CAA5C;AACD,GAFD;AAGD;AAED;;;;;;;;;AAOA,eAAe,SAASK,OAAT,CAAiBL,KAAjB,EAAwB;AACrC,MAAI,CAACH,YAAY,CAACG,KAAD,CAAjB,EAA0B;AACxB,WAAO,KAAP;AACD;;AAED,MAAIM,MAAM,GAAGN,KAAb;AACA,MAAIO,OAAO,GAAG,GAAd;;AACA,SAAOD,MAAM,IAAIC,OAAO,GAAG,CAAC,CAA5B,EAA+B;AAC7B,QAAIT,WAAW,CAACQ,MAAD,CAAf,EAAyB;AACvB,aAAO,IAAP;AACD;;AAEDA,IAAAA,MAAM,GAAGX,eAAe,CAACW,MAAD,CAAxB;AACAC,IAAAA,OAAO,IAAI,CAAX;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["/**\n * @file Detect whether a value is an error.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module isError\n */\n\nimport _getPrototypeOf from './.internal/_getPrototypeOf';\nimport toStringTag from './toStringTag';\nimport isObjectLike from './isObjectLike';\n\nlet testIsError = function _testIsError(value) {\n  return toStringTag(value) === '[object Error]';\n};\n\n/* istanbul ignore next */\nif (!testIsError(Error.prototype)) {\n  const errorProto = Error.prototype;\n  const testStringTag = testIsError;\n  testIsError = function _testIsError(value) {\n    return value === errorProto || testStringTag(value);\n  };\n}\n\n/**\n * Determine whether or not a given `value` is an `Error` type.\n *\n * @param {*} value - The object to be tested.\n * @returns {boolean} Returns `true` if `value` is an `Error` type,\n *  else `false`.\n */\nexport default function isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n\n  let object = value;\n  let maxLoop = 100;\n  while (object && maxLoop > -1) {\n    if (testIsError(object)) {\n      return true;\n    }\n\n    object = _getPrototypeOf(object);\n    maxLoop -= 1;\n  }\n\n  return false;\n}\n"],"file":"isError.js"}