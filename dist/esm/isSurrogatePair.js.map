{"version":3,"sources":["../../src/isSurrogatePair.js"],"names":["isString","_charCodeAt","isSurrogatePair","argsLength","length","first","second","char1","char2"],"mappings":"AAAA;;;;;AAMA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA;;;;;;;;;;;;AAWA,eAAe,SAASC,eAAT,GAAkC;AAC/C,MAAMC,UAAU,GAAG,UAAKC,MAAxB;;AAEA,MAAID,UAAU,GAAG,CAAjB,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,MAAIE,KAAJ;AACA,MAAIC,MAAJ;AACA,MAAMC,KAAK,mDAAX;;AAEA,MAAIJ,UAAU,KAAK,CAAnB,EAAsB;AACpB,QAAIH,QAAQ,CAACO,KAAD,CAAR,IAAmBA,KAAK,CAACH,MAAN,KAAiB,CAAxC,EAA2C;AACzCC,MAAAA,KAAK,GAAGJ,WAAW,CAACM,KAAD,EAAQ,CAAR,CAAnB;AACAD,MAAAA,MAAM,GAAGL,WAAW,CAACM,KAAD,EAAQ,CAAR,CAApB;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACF,GAPD,MAOO,IAAIJ,UAAU,GAAG,CAAjB,EAAoB;AACzB,QAAMK,KAAK,mDAAX;;AAEA,QAAI,CAACR,QAAQ,CAACO,KAAD,CAAT,IAAoBA,KAAK,CAACH,MAAN,KAAiB,CAArC,IAA0C,CAACJ,QAAQ,CAACQ,KAAD,CAAnD,IAA8DA,KAAK,CAACJ,MAAN,KAAiB,CAAnF,EAAsF;AACpF,aAAO,KAAP;AACD;;AAEDC,IAAAA,KAAK,GAAGJ,WAAW,CAACM,KAAD,EAAQ,CAAR,CAAnB;AACAD,IAAAA,MAAM,GAAGL,WAAW,CAACO,KAAD,EAAQ,CAAR,CAApB;AACD;;AAED,SAAOH,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAA5B,IAAsCC,MAAM,IAAI,MAAhD,IAA0DA,MAAM,IAAI,MAA3E;AACD","sourcesContent":["/**\n * @file Utility that needs description.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module isSurrogatePair\n */\n\nimport isString from 'is-string';\nimport _charCodeAt from './.internal/_charCodeAt';\n\n/**\n * Tests if the two character arguments combined are a valid UTF-16\n * surrogate pair.\n *\n * @param {Array} args - The arguments array.\n * @param {*} args.char1 - The character combination, or if `char2` is supplied then\n *  the first character of a suspected surrogate pair.\n * @param {*} [args.char2] - The second character of a suspected surrogate pair.\n * @returns {boolean} Returns true if the two characters create a valid\n *  'UTF-16' surrogate pair; otherwise false.\n */\nexport default function isSurrogatePair(...args) {\n  const argsLength = args.length;\n\n  if (argsLength < 1) {\n    return false;\n  }\n\n  let first;\n  let second;\n  const char1 = args[0];\n\n  if (argsLength === 1) {\n    if (isString(char1) && char1.length === 2) {\n      first = _charCodeAt(char1, 0);\n      second = _charCodeAt(char1, 1);\n    } else {\n      return false;\n    }\n  } else if (argsLength > 1) {\n    const char2 = args[1];\n\n    if (!isString(char1) || char1.length !== 1 || !isString(char2) || char2.length !== 1) {\n      return false;\n    }\n\n    first = _charCodeAt(char1, 0);\n    second = _charCodeAt(char2, 0);\n  }\n\n  return first >= 0xd800 && first <= 0xdbff && second >= 0xdc00 && second <= 0xdfff;\n}\n"],"file":"isSurrogatePair.js"}