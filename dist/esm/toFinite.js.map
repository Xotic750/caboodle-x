{"version":3,"sources":["../../src/toFinite.js"],"names":["INFINITY","isNumberNaN","sign","toNumber","MAX_INTEGER","toFinite","value","number"],"mappings":"AAAA;;;;;AAMA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAG,sBAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAI,CAACA,KAAL,EAAY;AACV,WAAOA,KAAK,KAAK,CAAV,GAAcA,KAAd,GAAsB,CAA7B;AACD;;AAED,MAAMC,MAAM,GAAGJ,QAAQ,CAACG,KAAD,CAAvB;;AAEA,MAAIC,MAAM,KAAKP,QAAX,IAAuBO,MAAM,KAAK,CAACP,QAAvC,EAAiD;AAC/C,WAAOE,IAAI,CAACK,MAAD,CAAJ,GAAeH,WAAtB;AACD;;AAED,SAAOH,WAAW,CAACM,MAAD,CAAX,GAAsB,CAAtB,GAA0BA,MAAjC;AACD","sourcesContent":["/**\n * @file Utility that needs description.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module toFinite\n */\n\nimport INFINITY from './.internal/_Infinity';\nimport isNumberNaN from './isNumberNaN';\nimport sign from './sign';\nimport toNumber from './toNumber';\n\nconst MAX_INTEGER = 1.7976931348623157e308;\n\nexport default function toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  const number = toNumber(value);\n\n  if (number === INFINITY || number === -INFINITY) {\n    return sign(number) * MAX_INTEGER;\n  }\n\n  return isNumberNaN(number) ? 0 : number;\n}\n"],"file":"toFinite.js"}