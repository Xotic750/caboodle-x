{"version":3,"sources":["../../src/toWholeNumber.js"],"names":["_toInteger","MAX_SAFE_INTEGER","toWholeNumber","value","integer"],"mappings":"AAAA;;;;;AAMA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,MAAMC,OAAO,GAAGJ,UAAU,CAACG,KAAD,CAA1B,CAD2C,CAG3C;;;AACA,MAAIC,OAAO,IAAI,CAAf,EAAkB;AAChB,WAAO,CAAP;AACD;;AAED,SAAOA,OAAO,GAAGH,gBAAV,GAA6BA,gBAA7B,GAAgDG,OAAvD;AACD","sourcesContent":["/**\n * @file Utility that needs description.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module toWholeNumber\n */\n\nimport _toInteger from './.internal/_toInteger';\nimport MAX_SAFE_INTEGER from './MAX_SAFE_INTEGER';\n\nexport default function toWholeNumber(value) {\n  const integer = _toInteger(value);\n\n  // includes converting -0 to +0\n  if (integer <= 0) {\n    return 0;\n  }\n\n  return integer > MAX_SAFE_INTEGER ? MAX_SAFE_INTEGER : integer;\n}\n"],"file":"toWholeNumber.js"}