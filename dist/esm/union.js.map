{"version":3,"sources":["../../src/union.js"],"names":["_accumulate","_includes","_push","requireObjectCoercible","addNotIncluded","_addNotIncluded","accumulator","value","reduceArgs","_reduceArgs","array","union","arrays"],"mappings":"AAAA;;;;;AAMA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAEA,IAAMC,cAAc,GAAG,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,KAAtC,EAA6C;AAClE,MAAI,CAACN,SAAS,CAACK,WAAD,EAAcC,KAAd,CAAd,EAAoC;AAClCL,IAAAA,KAAK,CAACI,WAAD,EAAcC,KAAd,CAAL;AACD;;AAED,SAAOD,WAAP;AACD,CAND;;AAQA,IAAME,UAAU,GAAG,SAASC,WAAT,CAAqBH,WAArB,EAAkCI,KAAlC,EAAyC;AAC1D,SAAOV,WAAW,CAACG,sBAAsB,CAACO,KAAD,CAAvB,EAAgCN,cAAhC,EAAgDE,WAAhD,CAAlB;AACD,CAFD;AAIA;;;;;;;;;AAOA,eAAe,SAASK,KAAT,GAA0B;AAAA,oCAARC,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AACvC,SAAOZ,WAAW,CAACY,MAAD,EAASJ,UAAT,EAAqB,EAArB,CAAlB;AACD","sourcesContent":["/**\n * @file Creates an array of unique values, in order, from all given arrays.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module union\n */\n\nimport _accumulate from './.internal/_accumulate';\nimport _includes from './.internal/_includes';\nimport _push from './.internal/_push';\nimport requireObjectCoercible from './requireObjectCoercible';\n\nconst addNotIncluded = function _addNotIncluded(accumulator, value) {\n  if (!_includes(accumulator, value)) {\n    _push(accumulator, value);\n  }\n\n  return accumulator;\n};\n\nconst reduceArgs = function _reduceArgs(accumulator, array) {\n  return _accumulate(requireObjectCoercible(array), addNotIncluded, accumulator);\n};\n\n/**\n * This method creates an array of unique values, in order, from all given\n * arrays using SameValueZero for equality comparisons.\n *\n * @param {Array.<Array>} [arrays] - The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n */\nexport default function union(...arrays) {\n  return _accumulate(arrays, reduceArgs, []);\n}\n"],"file":"union.js"}